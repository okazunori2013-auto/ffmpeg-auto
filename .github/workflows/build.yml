name: build

on:
  pull_request:
  push:
    branches: 
      - master
    paths-ignore:
     - 'README.md'
  workflow_dispatch:
    inputs:
      old-build-artifacts:
        description: 'Use old artifacts?'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: '0 10 * * *'
jobs:
  update-submodules:
    if: github.event_name == 'schedule'
    uses:  ./.github/workflows/update submodules.yml
  build:
    if: ${{always()}}
    needs: update-submodules
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2025]
        build: [minimum-build,minimum-build-static,full-build,full-build-static]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Preparation
        shell: cmd
        run: |
          git config --global core.symlinks true
          fsutil 8dot3name set 0
          echo "Adding GNU tar to PATH"
          echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
      - name: cuda-toolkit
        run: winget install Nvidia.CUDA
      - name: Checkout
        uses: actions/checkout@v3 
        with:
          submodules: recursive
      - name: Patch bash scripts
        shell: cmd
        run: |
          call .\patch\patch_bash_scripts.bat
          xcopy settings\${{ matrix.build }}\* media-autobuild_suite\build\ /Y /I /S
          xcopy settings\common\* media-autobuild_suite\build\ /Y /I /S
      - name: Cache
        uses: actions/cache@main
        with: 
          path: media-autobuild_suite/msys64
          key: msys-2-${{ hashFiles('./media-autobuild_suite/build/media-suite_compile.sh') }}
          restore-keys: |
             msys-2-${{ hashFiles('./media-autobuild_suite/build/media-suite_compile.sh') }}
             msys-
      - name: Download artifact
        if: ${{ inputs.old-build-artifacts }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          name: media-autobuild_suite-${{ matrix.os }}-${{ matrix.build }}
          if_no_artifact_found: warn
      - name: extract 7z
        if: ${{ inputs.old-build-artifacts }}
        shell: cmd
        run: |
          7z.exe x ffmpeg.7z -y -o./media-autobuild_suite
          del ffmpeg.7z /Q 
      - name: run media-autobuild
        id: media-autobuild
        shell: cmd
        run: |
          call .\media-autobuild_suite\media-autobuild_suite.bat
      - name: 7z
        continue-on-error: true
        if: ${{always()}}
        shell: cmd
        run: |
          if exist ./media-autobuild_suite/build/logs.zip (7z.exe a -y -sdel ffmpeg.7z ./media-autobuild_suite/local64 ./media-autobuild_suite/build/logs.zip) else (7z.exe a -y -sdel ffmpeg.7z ./media-autobuild_suite/local64)
      - name: Upload artifacts
        if: ${{always()}}
        uses: actions/upload-artifact@v4
        with:
          name: media-autobuild_suite-${{ matrix.os }}-${{ matrix.build }}
          path: |
            ffmpeg.7z
            media-autobuild_suite/build/*_options.txt
            media-autobuild_suite/build/media-autobuild_suite.ini
